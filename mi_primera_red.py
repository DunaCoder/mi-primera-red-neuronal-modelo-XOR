# -*- coding: utf-8 -*-
"""mi_primera_red.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1c_Bkwiu0XNxwT0LGECEbi6O44ljXodZy
"""

import numpy as np
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense

# Datos de entrada (las combinaciones de 0 y 1)
X = np.array([[0, 0], [0, 1], [1, 0], [1, 1]])

# Datos de salida (el resultado de cada operación XOR)
y = np.array([0, 1, 1, 0])

model = Sequential()
model.add(Dense(16, input_dim=2, activation='relu'))
model.add(Dense(1, activation='sigmoid'))

model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])


print(model.summary())
print("\n--- ¡Empezando el entrenamiento! ---")


model.fit(X, y, epochs=10000, verbose=0)
print("Entrenamiento completado.")

predictions = model.predict(X)
binary_predictions = (predictions > 0.5).astype(int)


print("\n--- Resultados de la predicción ---")
for i in range(len(X)):
    print(f"Entrada: {X[i]} -> Predicción: {binary_predictions[i][0]} (Esperado: {y[i]})")